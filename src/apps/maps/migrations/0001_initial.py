# Generated by Django 4.1.5 on 2023-03-11 09:26
import logging
from typing import Tuple

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid

PLACE_DATA = (
    "subway",
    "polyclinic",
    "fitness",
    "school",
    "kindergarten"
)

TRAVEL_TIME_DATA = (
    10,
    15,
    20,
    30,
)

TRANSPORT_TYPE_DATA = (
    "car",
    "walk",
    "public"
)


class BaseFiller:
    APP_NAME = 'maps'

    def __init__(self, apps, schema_editor, model_name: str, filling_data: tuple):
        self.apps = apps
        self.schema_editor = schema_editor
        self.db_alias = self.schema_editor.connection.alias
        self.model_name = model_name
        self.filling_data = filling_data

    def get_model(self):
        return self.apps.get_model(self.APP_NAME, self.model_name)

    def fill(self):
        for i in self.filling_data:
            if self.model_name == "TravelTime":
                self.get_model().objects.create(time=i)
            else:
                self.get_model().objects.create(name=i)

    def undo_fill(self):
        self.get_model().objects.all().delete()


def fill_with_initial(apps, schema):
    BaseFiller(apps, schema, "Place", filling_data=PLACE_DATA).fill()
    BaseFiller(apps, schema, "TravelTime", filling_data=TRAVEL_TIME_DATA).fill()
    BaseFiller(apps, schema, "TransportType", filling_data=TRANSPORT_TYPE_DATA).fill()


def undo_fill(apps, schema):
    BaseFiller(apps, schema, "Place", filling_data=PLACE_DATA).undo_fill()
    BaseFiller(apps, schema, "TravelTime", filling_data=TRAVEL_TIME_DATA).undo_fill()
    BaseFiller(apps, schema, "TransportType", filling_data=TRANSPORT_TYPE_DATA).undo_fill()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Место')),
            ],
        ),
        migrations.CreateModel(
            name='TransportType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Вид транспорта')),
            ],
        ),
        migrations.CreateModel(
            name='TravelTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.SmallIntegerField(default=10, verbose_name='Время в пути')),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maps', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Карта',
                'verbose_name_plural': 'Карты',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='maps.map', verbose_name='Карта')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='maps.place', verbose_name='Место')),
                ('transport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='maps.transporttype', verbose_name='Вид транспорта')),
                ('travel_time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='maps.traveltime', verbose_name='Время в пути')),
            ],
            options={
                'verbose_name': 'Выбор',
                'verbose_name_plural': 'Выборы',
            },
        ),
        migrations.RunPython(fill_with_initial, reverse_code=undo_fill)
    ]
